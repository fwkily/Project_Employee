<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zm.employee.dao.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.zm.employee.bean.Employee">
        <id column="emp_id" jdbcType="INTEGER" property="empId" />
        <result column="emp_name" jdbcType="VARCHAR" property="empName" />
        <result column="gender" jdbcType="CHAR" property="gender" />
        <result column="email" jdbcType="VARCHAR" property="email" />
          <result column="pwd" jdbcType="VARCHAR" property="pwd" />
        <result column="d_id" jdbcType="INTEGER" property="dId" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                        open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                        open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        emp_id, emp_name, gender, email,pwd, d_id
    </sql>
    <sql id="AndDeptBase_Column_List">
        e.emp_id, e.emp_name, e.gender, e.email,e.pwd, e.d_id , d.dept_id,d.dept_name
    </sql>
    <select id="selectByExample" parameterType="com.zm.employee.bean.EmployeeExample"
        resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tb_emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
        resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_emp
        where emp_id = #{empId,jdbcType=INTEGER}
    </select>

<!--   自定义加上部门的ResultMap -->
    <resultMap type="com.zm.employee.bean.Employee" id="ByExampleAndDept">
        <id column="emp_id" jdbcType="INTEGER" property="empId" />
        <result column="emp_name" jdbcType="VARCHAR" property="empName" />
        <result column="gender" jdbcType="CHAR" property="gender" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="pwd" jdbcType="VARCHAR" property="pwd" />
        <result column="d_id" jdbcType="INTEGER" property="dId" />
        <!-- 外键关联列 查询部门   这里千万不能写成jdbcType-->
        <association property="dept" javaType="com.zm.employee.bean.Department">
            <id column="d_id" property="deptId" />
            <result column="dept_name" property="deptName" />
        </association>
    </resultMap>
    
  <!-- List<Employee> selectByExampleAndDept(EmployeeExample example); -->
    <select id="selectByExampleAndDept" resultMap="ByExampleAndDept">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="AndDeptBase_Column_List" />
        FROM tb_emp e LEFT JOIN tb_dept d ON e.`d_id` = d.`dept_id`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        order by emp_id asc
    </select>
    <!-- Employee selectByPrimaryKeyAndDept(Integer empId); -->
    <select id="selectByPrimaryKeyAndDept" resultMap="ByExampleAndDept">
        select
        <include refid="AndDeptBase_Column_List" />
        FROM tb_emp e LEFT JOIN tb_dept d ON e.`d_id` = d.`dept_id` where
        emp_id=#{emp_id}
    </select>
<!--  List<Employee> selectEmp(String selectMsg); -->
    <select id="selectEmpByName" resultMap="ByExampleAndDept">
       select 
        <include refid="AndDeptBase_Column_List" />
        FROM tb_emp e LEFT JOIN tb_dept d ON e.`d_id` = d.`dept_id` where e.emp_name like #{name}
    </select>

<!--    List<Employee> selectEmpByDept(String selectMsg); -->
     <select id="selectEmpByDept" resultMap="ByExampleAndDept">
        select 
        <include refid="AndDeptBase_Column_List" />
        FROM tb_emp e LEFT JOIN tb_dept d ON e.`d_id` = d.`dept_id` where d_id= #{dId,jdbcType=INTEGER}
    </select>
    <!--  long updateEmpPwd(Integer id,String pwd); -->
    <update id="updateEmpPwd">
       UPDATE `tb_emp` SET `pwd` = #{pwd} WHERE `emp_id` = #{id}
    </update>



    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from tb_emp
        where emp_id = #{empId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.zm.employee.bean.EmployeeExample">
        delete from tb_emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.zm.employee.bean.Employee">
        insert into tb_emp (emp_id, emp_name, gender,
        email, d_id)
        values (#{empId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR},
        #{gender,jdbcType=CHAR},
        #{email,jdbcType=VARCHAR}, #{dId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.zm.employee.bean.Employee">
        insert into tb_emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empId != null">
                emp_id,
            </if>
            <if test="empName != null">
                emp_name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="dId != null">
                d_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empId != null">
                #{empId,jdbcType=INTEGER},
            </if>
            <if test="empName != null">
                #{empName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="dId != null">
                #{dId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zm.employee.bean.EmployeeExample"
        resultType="java.lang.Long">
        select count(*) from tb_emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_emp
        <set>
            <if test="record.empId != null">
                emp_id = #{record.empId,jdbcType=INTEGER},
            </if>
            <if test="record.empName != null">
                emp_name = #{record.empName,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.dId != null">
                d_id = #{record.dId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_emp
        set emp_id = #{record.empId,jdbcType=INTEGER},
        emp_name = #{record.empName,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=CHAR},
        email = #{record.email,jdbcType=VARCHAR},
        d_id = #{record.dId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zm.employee.bean.Employee">
        update tb_emp
        <set>
            <if test="empName != null">
                emp_name = #{empName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="dId != null">
                d_id = #{dId,jdbcType=INTEGER},
            </if>
        </set>
        where emp_id = #{empId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zm.employee.bean.Employee">
        update tb_emp
        set emp_name = #{empName,jdbcType=VARCHAR},
        gender = #{gender,jdbcType=CHAR},
        email = #{email,jdbcType=VARCHAR},
        d_id = #{dId,jdbcType=INTEGER}
        where emp_id = #{empId,jdbcType=INTEGER}
    </update>
</mapper>